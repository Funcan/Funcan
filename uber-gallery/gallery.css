/* 
 * If you change variable 'customClass' in gallery.js, please change
 * 'funcan' to whatever to match. Leave the rest as-is. :)
 * 
 * font-family is set on line 672 of style.css. 
 */

/*
    GALLERY
*/

.funcan-gallery {
    margin: 0 auto;
    margin-bottom: 6px;
    margin-top: 6px;
    width: 99%;
}

.funcan-gallery a {
    margin: 0;
    padding: 0;
}

/* 
 * Every image and row should be separated by a total of 6px.
 * 6px at the bottom of each row, and 
 * 3px to the left and right of each image.
 */

.funcan-row {
    margin-bottom: 6px;
    overflow: auto;
}

.funcan-row img,
.funcan-row a > img {
    -moz-lightbox-sizing: border-lightbox;
    -webkit-lightbox-sizing: border-lightbox;
    lightbox-sizing: border-lightbox;
    float: left;
    height: 100px;
    padding: 0 3px 0 3px;
    width: auto;
}

/* 
 * For older versions of IE. I had problem clearing row floats with 'overflow: auto'.
 */

.funcan-row:after {
    clear: both;
}

/* 
 * I remove padding on first and last elements in order to make the gallery rows better fit the available space.
 * Look at 'orderRowImages' in gallery.js for more information. 
 */
 
.funcan-row:first-child {
    padding-left: 0;
}

.funcan-row:last-child {
    padding-right: 0;
}

/*
    GLOBAL POSITIONING
*/

/* 
 * The lightlightbox should be appended to the <body> element, and every element
 * inside of lightlightbox given a fixed position and dimensions
 * (100% x 100%) of the screen size. Width is set via CSS, height via JS. 
 */

.funcan-lightbox,
.funcan-lightbox-close,
.funcan-lightbox-nav,
.funcan-lightbox-txt {
    position: fixed;
}

.funcan-lightbox a,
.funcan-lightbox p {
    color: #fff;
    text-decoration: none;
}

/*
    LIGHTBOX
*/

.funcan-lightbox {
    /* Fallback. */
    background: #232529;
    background: rgba(35,37,41,0.9);
    display: none;
    left: 0;
    overflow: auto;
    top: 0;
    width: 100%;
}

.funcan-lightbox a {
    outline: 0;
}

/*
    LIGHTBOX IMAGE
*/

.funcan-lightbox-img {
    margin: 0 auto;
}

@media screen and (orientation: landscape) {
    .funcan-lightbox-img img {
        max-height: 99%;
        overflow: hidden;
        width: auto;
    }
}

@media screen and (orientation: portrait) {
    .funcan-lightbox-img img {
        height: auto;
        overflow: hidden;
        max-width: 99%;
    }
}

/*
    CLOSE LIGHTBOX
*/

.funcan-lightbox-close {
    display: table;
    height: 40px;
    line-height: 40px;
    top: 0;
    width: 40px;
    z-index: 5;
}

.funcan-lightbox-close a {
    background: rgba(255,255,255,0.5);
    display: table-cell;
    font-size: 40px;
    text-transform: uppercase;
    vertical-align: middle;
    width: 100%;
}

.funcan-lightbox-close a:hover {
    background: rgba(255,255,255,0.7);
}

.funcan-lightbox-close a:active {
    background: rgba(255,255,255,0.9);
}

/*
    NAVIGATION BARS
*/

.funcan-lightbox-nav {
    height: 100%;
    overflow: auto;
    width: 100%;
}

.funcan-lightbox-nav-left,
.funcan-lightbox-nav-right {
    display: table;
    height: 100%;
    width: 50%;
}

.funcan-lightbox-nav-left {
    float: left; 
}

.funcan-lightbox-nav-right {
    float: right;
}

.funcan-lightbox-nav a {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    display: table-cell;
    font-size: 80px;
    height: 100%;
    padding: 10px;
    vertical-align: middle;
    width:100%;
}

.funcan-lightbox-nav-left a {
    text-align: left;
}

.funcan-lightbox-nav-right a {
    text-align: right;
}

/*
    IMAGE CAPTION
*/

.funcan-lightbox-txt {
    background: rgba(35,37,41,0.4);
    height: 10%;
    width: 100%;
}

.funcan-lightbox-txt-left,
.funcan-lightbox-txt-right {
    width: 50%;
}

.funcan-lightbox-txt-left {
    float: left; 
}

.funcan-lightbox-txt-right {
    float: right;
}

/* 
 * There is a serious bug in the latest version of Chrome that, in the precise
 * circumstancs that arises in the lightbox, causes the paragraph font to not 
 * render, unless the paragraph is forcibly refreshed.
 *
 * fontfix is a hacky workaround that changes the paragraph opacity from 
 * 1.0 to 1.0 through a CSS3 animation effect, which triggers a refresh.
 *  
 * The bug is /only/ present in the latest (April 2014) versions of Chrome. See
 * https://code.google.com/p/chromium/issues/detail?id=336476 for more info.
 */

.funcan-lightbox-txt p {
    -webkit-animation-duration: 0.1s;
    -webkit-animation-name: fontfix;
    -webkit-animation-iteration-count: 1;
    -webkit-animation-timing-function: linear;
    -webkit-animation-delay: 2s;
    font-size: 20px;
    height: 100%;
    text-align: center;
}

@-webkit-keyframes fontfix {
    from { opacity: 1; }
    50%  { opacity: 0.8; }
    to   { opacity: 1; }
}
